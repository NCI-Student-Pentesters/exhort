import { Vulnerability } from '../api/report';
import { issueLink } from '../utils/utils';
import { usePrivateIssueHelper } from '../hooks/usePrivateDataHelper';
import { useAppContext } from '../App';

export const VulnerabilityLink = ({ sourceName: providerName, vulnerability }: { sourceName: string; vulnerability: Vulnerability }) => {
  const privateIssueHelper = usePrivateIssueHelper();
  const appContext = useAppContext();
  return (
    <>
      {privateIssueHelper.hideIssue(providerName, vulnerability.unique) ? (
        <>
          <a href={appContext.snykSignup} target="_blank" rel="noreferrer">
            Sign up for a Snyk account
          </a>{' '}
          to learn about the vulnerabilities found
        </>
      ) : ( providerName === 'snyk' && (vulnerability.remediation?.fixedIn === null || vulnerability.remediation?.fixedIn?.length === 0)  ?(<p></p>):
          (<a href={issueLink(providerName, vulnerability.id, appContext)} target="_blank" rel="noreferrer">
            {vulnerability.id}
          </a>)
      )}
    </>
  );
};
